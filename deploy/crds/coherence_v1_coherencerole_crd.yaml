apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: coherenceroles.coherence.oracle.com
spec:
  group: coherence.oracle.com
  names:
    kind: CoherenceRole
    listKind: CoherenceRoleList
    plural: coherenceroles
    singular: coherencerole
  scope: Namespaced
  subresources:
    scale:
      labelSelectorPath: .status.selector
      specReplicasPath: .spec.replicas
      statusReplicasPath: .status.replicas
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations are free-form yaml that will be added to the
                store release as annotations Any annotations should be placed BELOW
                this annotations: key. For example if we wanted to include annotations
                for Prometheus it would look like this:  annotations:   prometheus.io/scrape:
                "true"   prometheus.io/port: "2408"'
              type: object
            cacheConfig:
              description: CacheConfig is the name of the cache configuration file
                to use
              type: string
            env:
              additionalProperties:
                type: string
              description: 'Env is additional environment variable mappings that will
                be passed to the Coherence container in the Pod To specify extra variables
                add them as name value pairs the same as they would be added to a
                Pod containers spec, for example these values:  env:   FOO: "foo-value"   BAR:
                "bar-value"  will add the environment variable mappings FOO="foo-value"
                and BAR="bar-value"'
              type: object
            images:
              description: Details of the Docker images used in the role
              properties:
                coherence:
                  description: CoherenceImage is the details of the Coherence image
                    to be used
                  properties:
                    image:
                      description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images'
                      type: string
                    imagePullPolicy:
                      description: 'Image pull policy. One of Always, Never, IfNotPresent.
                        More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                      type: string
                  type: object
                coherenceUtils:
                  description: CoherenceUtils is the details of the Coherence utilities
                    image to be used
                  properties:
                    image:
                      description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images'
                      type: string
                    imagePullPolicy:
                      description: 'Image pull policy. One of Always, Never, IfNotPresent.
                        More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                      type: string
                  type: object
                fluentd:
                  description: Fluentd defines the settings for the fluentd image
                  properties:
                    application:
                      description: The fluentd application configuration
                      properties:
                        configFile:
                          description: The fluentd configuration file configuring
                            source for application log.
                          type: string
                        tag:
                          description: This value should be source.tag from fluentd.application.configFile.
                          type: string
                      type: object
                    image:
                      description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images'
                      type: string
                    imagePullPolicy:
                      description: 'Image pull policy. One of Always, Never, IfNotPresent.
                        More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                      type: string
                  type: object
                userArtifacts:
                  description: UserArtifacts configures the image containing jar files
                    and configuration files that are added to the Coherence JVM's
                    classpath.
                  properties:
                    configDir:
                      description: The folder in the custom artifacts Docker image
                        containing configuration files to be added to the classpath
                        of the Coherence container. If not set the configDir is "/files/conf".
                      type: string
                    image:
                      description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images'
                      type: string
                    imagePullPolicy:
                      description: 'Image pull policy. One of Always, Never, IfNotPresent.
                        More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                      type: string
                    libDir:
                      description: The folder in the custom artifacts Docker image
                        containing jar files to be added to the classpath of the Coherence
                        container. If not set the libDir is "/files/lib".
                      type: string
                  type: object
              type: object
            javaOpts:
              description: JavaOpts is miscellaneous JVM options to pass to the Coherence
                store container This options will override the system options computed
                in the start up script.
              type: string
            jvmArgs:
              description: JvmArgs specifies the options to pass to the Coherence
                JVM. The default is to use the G1 collector.
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'The extra labels to add to the all of the Pods in this
                roles. Labels here will add to or override those defined for the cluster.
                More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            logging:
              description: Logging allows configuration of Coherence and java util
                logging.
              properties:
                configFile:
                  description: 'ConfigFile allows the location of the Java util logging
                    configuration file to be overridden.  If this value is not set
                    the logging.properties file embedded in this chart will be used.  If
                    this value is set the configuration will be located by trying
                    the following locations in order:    1. If store.logging.configMapName
                    is set then the config map will be mounted as a volume and the
                    logging         properties file will be located as a file location
                    relative to the ConfigMap volume mount point.    2. If userArtifacts.imageName
                    is set then using this value as a file name relative to the location
                    of the         configuration files directory in the user artifacts
                    image.    3. Using this value as an absolute file name.'
                  type: string
                configMapName:
                  description: ConfigMapName allows a config map to be mounted as
                    a volume containing the logging  configuration file to use.
                  type: string
                level:
                  description: The default being 5 (info level).
                  format: int32
                  type: integer
              type: object
            main:
              description: Main allows specification of Coherence container main class.
              properties:
                arguments:
                  description: Arguments is the optional arguments for Coherence container
                    main class.
                  type: string
                class:
                  description: Class is the Coherence container main class.  The default
                    value is   com.tangosol.net.DefaultCacheServer.
                  type: string
              type: object
            maxHeap:
              description: MaxHeap is the min/max heap value to pass to the JVM. The
                format should be the same as that used for Java's -Xms and -Xmx JVM
                options. If not set the JVM defaults are used.
              type: string
            overrideConfig:
              description: OverrideConfig is name of the Coherence operational configuration
                override file, the default is tangosol-coherence-override.xml
              type: string
            podManagementPolicy:
              description: PodManagementPolicy sets the podManagementPolicy value
                for the Coherence cluster StatefulSet.  The default value is Parallel,
                to cause Pods to be started and stopped in parallel, which can be
                useful for faster cluster start-up in certain scenarios such as testing
                but could cause data loss if multiple Pods are stopped in parallel.  This
                can be changed to OrderedReady which causes Pods to start and stop
                in sequence.
              type: string
            pofConfig:
              description: PofConfig is the name of the POF configuration file to
                use when using POF serializer
              type: string
            ports:
              additionalProperties:
                format: int32
                type: integer
              description: 'Ports is additional port mappings that will be added to
                the Pod To specify extra ports add them as port name value pairs the
                same as they would be added to a Pod containers spec, for example
                these values:  ports:   my-http-port: 8080   my-other-port: 1234  will
                add the port mappings to the Pod and Service for ports 8080 and 1234'
              type: object
            readinessProbe:
              description: 'The readiness probe config to be used for the Pods in
                this role. ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/'
              properties:
                failureThreshold:
                  description: Minimum consecutive failures for the probe to be considered
                    failed after having succeeded.
                  format: int32
                  type: integer
                initialDelaySeconds:
                  description: 'Number of seconds after the container has started
                    before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                  format: int32
                  type: integer
                periodSeconds:
                  description: How often (in seconds) to perform the probe.
                  format: int32
                  type: integer
                successThreshold:
                  description: Minimum consecutive successes for the probe to be considered
                    successful after having failed.
                  format: int32
                  type: integer
                timeoutSeconds:
                  description: 'Number of seconds after which the probe times out.
                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                  format: int32
                  type: integer
              type: object
            replicas:
              description: The desired number of cluster members of this role. This
                is a pointer to distinguish between explicit zero and not specified.
                Default value is 3.
              format: int32
              type: integer
            revisionHistoryLimit:
              description: RevisionHistoryLimit is the number of deployment revision
                K8s keeps after rolling upgrades. The default value if not set is
                3.
              format: int32
              type: integer
            role:
              description: The name of this role. This value will be used to set the
                Coherence role property for all members of this role
              type: string
            scalingPolicy:
              description: ScalingPolicy describes how the replicas of the cluster
                role will be scaled. The default if not specified is based upon the
                value of the StorageEnabled field. If StorageEnabled field is not
                specified or is true the default scaling will be safe, if StorageEnabled
                is set to false the default scaling will be parallel.
              type: string
            storageEnabled:
              description: A boolean flag indicating whether members of this role
                are storage enabled. This value will set the corresponding coherence.distributed.localstorage
                System property. If not specified the default value is true. This
                flag is also used to configure the ScalingPolicy value if a value
                is not specified. If the StorageEnabled field is not specified or
                is true the scaling will be safe, if StorageEnabled is set to false
                scaling will be parallel.
              type: boolean
          type: object
        status:
          properties:
            currentReplicas:
              description: CurrentReplicas is the current size of the Coherence cluster.
              format: int32
              type: integer
            readyReplicas:
              description: ReadyReplicas is the number of Pods created by the StatefulSet.
              format: int32
              type: integer
            replicas:
              description: Replicas is the desired size of the Coherence cluster.
              format: int32
              type: integer
            selector:
              description: 'label query over pods that should match the replicas count.
                This is same as the label selector but in the string format to avoid
                introspection by clients. The string will be in the same format as
                the query-param syntax. More info about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors'
              type: string
            status:
              description: The current status.
              type: string
          required:
          - replicas
          - currentReplicas
          - readyReplicas
          type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
