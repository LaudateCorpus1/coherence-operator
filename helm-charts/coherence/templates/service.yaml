{{/*# Copyright 2019, Oracle Corporation and/or its affiliates.  All rights reserved.*/}}
{{/*# Licensed under the Universal Permissive License v 1.0 as shown at*/}}
{{/*# http://oss.oracle.com/licenses/upl.*/}}
{{/*  */}}
{{- $cluster := include "coherence.clusterName" $ }}
{{- $role := include "coherence.role" $ }}
{{- $fn := printf "%s-%s" $cluster $role }}
{{- $lb := include "coherence.release_labels" . }}
{{- if .Values.store.ports -}}
{{-   range $port := .Values.store.ports }}
{{-     $portName := required "A name value is required for every port in store.ports" $port.name -}}
{{-     $portPort := required "A port value is required for every port in store.ports" $port.port -}}
{{-     $serviceEnabled := true }}
{{-     if $port.service }}
{{-         $serviceEnabled := or (kindIs "invalid" $port.service.enabled) $port.service.enabled }}
{{-     end }}
{{-     if $serviceEnabled }}
{{ printf "\n---" }}
apiVersion: v1
kind: Service
metadata:
{{- if $port.service }}
{{-   if $port.service.name }}
  name: {{ $port.service.name }}
{{-   else }}
  name: {{ $fn }}-{{ $portName }}
{{-   end }}
{{- else }}
  name: {{ $fn }}-{{ $portName }}
{{- end }}
  annotations:
{{- if $port.service }}
{{-   if $port.service.annotations }}
{{ toYaml $port.service.annotations | indent 4 }}
{{-   end }}
{{- end }}
  labels: {{ $lb | indent 4 }}
    component: coherence-service-{{ $port.name }}
spec:
{{- if $port.service }}
{{-   if $port.service.type }}
  type: {{ $port.service.type }}
{{-   end }}
{{-   if $port.service.loadBalancerIP }}
  loadBalancerIP: {{ $port.service.loadBalancerIP }}
{{-   end }}
{{-   if $port.service.sessionAffinity }}
  sessionAffinity: {{ $port.service.sessionAffinity }}
{{-   end }}
{{-   if $port.service.loadBalancerSourceRanges }}
  loadBalancerSourceRanges: {{ $port.service.loadBalancerSourceRanges | nindent 4 }}
{{-   end }}
{{-   if $port.service.externalName }}
  externalName: {{ $port.service.externalName }}
{{-   end }}
{{-   if $port.service.externalTrafficPolicy }}
  externalTrafficPolicy: {{ $port.service.externalTrafficPolicy }}
{{-   end }}
{{-   if $port.service.healthCheckNodePort }}
  healthCheckNodePort: {{ $port.service.healthCheckNodePort }}
{{-   end }}
{{-   if $port.service.publishNotReadyAddresses }}
  publishNotReadyAddresses: {{ $port.service.publishNotReadyAddresses }}
{{-   end }}
{{-   if $port.service.sessionAffinityConfig }}
  sessionAffinityConfig: {{ $port.service.sessionAffinityConfig | nindent 4 }}
{{-   end }}
{{- end }}
  ports:
    - name: {{ $port.name }}
      protocol: {{ $port.protocol | default "TCP" }}
{{- if $port.service }}
{{-   if $port.service.port }}
      port: {{ $port.service.port }}
{{-   else }}
      port: {{ $portPort }}
{{-   end }}
{{- else }}
      port: {{ $portPort }}
{{- end }}
      targetPort: {{ $port.name }}
  selector:
    coherenceDeployment: {{ include "coherence.fullname" $ }}
    coherenceCluster: {{ $cluster }}
    coherenceRole: {{ $role }}
    component: coherencePod
{{-     end }} {{/* end if $serviceEnabled */}}
{{-   end }} {{/* end of port range loop */}}
{{- end }}   {{/* end if .Values.store.ports */}}
